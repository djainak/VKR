.allform {
    font-family: "Lucida Sans Unicode", "Lucida Grande", Sans-Serif;
    color: #000000;
    font-size: 14px;
    background: #F5D7BF;
    width: 35%; /* устанавливаем ширину элемента */
    padding: 20px; /* устанавливаем внутренние отступы элемента */
    border: 2px solid #000000; /* устанавливаем границы элемента */
}

input {
    background-color: #ECE9E0;
}
option {
    background-color: #ECE9E0;
}

label{
    font-weight:700;
}
/*
table {
    font-family: "Lucida Sans Unicode", "Lucida Grande", Sans-Serif;
    text-align: left;
    border-collapse: separate;
    border-spacing: 5px;
    background: #ECE9E0;
    color: #000000;
    border: 16px solid #ECE9E0;
    border-radius: 20px;
}

th {
    font-size: 14px;
    padding: 10px;
}

td {
    background: #F5D7BF;
    padding: 10px;
    font-size: 14px;
}*/

img {
    object-fit: cover;
    width: 100px;
    height: 100px;
}

*, *:before, *:after {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
    padding: 0;
    margin: 0;
}

#main-form {
    transition: .3s;
    width: 960px;
    font-size: 17px;
    margin-left: calc(50% - 480px);
    background: #FFFCF7;
}
.menu-item {
    cursor: pointer;
    border: 1px solid #A68244;
    width: 25%;
    height: 25px;
    padding: 5px;
    background: #FFEED1;
}
    .menu-item:hover {
        background: #FFF2DD;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
    }
.menu_text {
    text-decoration: none;
    color: #000000;
    width: 100%;
}
.link-but {
    background: #FFF2DD;
    text-decoration: none;
    color: #000000;
    cursor: pointer;
    border: 1px solid #BFB29D;
    height: 35px;
    width: 100px;
    display: block;
    padding: 8px;
    padding-left: 10px;
    margin-top: 10px;
}
    .link-but:hover {
        background: #FFEED1;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
    }

/* Скрываем реальный чекбокс */
.checkbox {
    display: none;
}
/* Задаем внешний вид для нашего кастомного чекбокса. Все обязательные свойства прокомментированы, остальные же свойства меняйте по вашему усмотрению */
.checkbox-custom {
    position: relative; /* Обязательно задаем, чтобы мы могли абсолютным образом позиционировать псевдоэлемент внютри нашего кастомного чекбокса */
    width: 20px; /* Обязательно задаем ширину */
    height: 20px; /* Обязательно задаем высоту */
    border: 2px solid #ccc;
    border-radius: 3px;
}
/* Кастомный чекбокс и лейбл центрируем по вертикали. Если вам это не требуется, то вы можете убрать свойство vertical-align: middle из данного правила, но свойство display: inline-block обязательно должно быть */
.checkbox-custom,
.label {
    display: inline-block;
    vertical-align: middle;
}
/* Если реальный чекбокс у нас отмечен, то тогда добавляем данный признак и к нашему кастомному чекбоксу  */
.checkbox:checked + .checkbox-custom::before {
    content: ""; /* Добавляем наш псевдоэлемент */
    display: block; /* Делаем его блочным элементом */
    position: absolute; /* Позиционируем его абсолютным образом */
    /* Задаем расстояние от верхней, правой, нижней и левой границы */
    top: 2px;
    right: 2px;
    bottom: 2px;
    left: 2px;
    background: #413548; /* Добавляем фон. Если требуется, можете поставить сюда картинку в виде "галочки", которая будет символизировать, что чекбокс отмечен */
    border-radius: 2px;
}